name: Urbs-Setting Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build And Upload Release Asset
    runs-on: ubuntu-latest
    container: golang:1.14.1
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go version
          go get -v -d ./...

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          make build-linux
          cd dist
          tar -czf urbs-setting.linux-amd64.tar.gz urbs-setting

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/urbs-setting.linux-amd64.tar.gz
          asset_name: urbs-setting.linux-amd64.tar.gz
          asset_content_type: application/octet-stream
